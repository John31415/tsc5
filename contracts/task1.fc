#include "imports/stdlib.fc";

() recv_internal(int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) impure {

}

() recv_external(slice in_msg) impure {
    var op = in_msg~load_uint(32);
    var query_id = in_msg~load_uint(64);
    var signature = in_msg~load_bits(512);
    var ref_cell = in_msg~load_ref();
    var data = get_data().begin_parse();
    var (public_key, execution_time, receiver, seqno) = (data~load_uint(256), data~load_uint(32), data~load_msg_addr(), data~load_uint(32));
    data.end_parse();
    var locked_for = ref_cell.begin_parse()~load_uint(32);    
    var new_seqno = ref_cell~load_uint(32);
    throw_if(119,new_seqno != (seqno + 1));
    throw_unless(120, check_signature(slice_hash(ref_cell), signature, public_key));
    throw_if(121,locked_for <= 0);
    throw_if(122,execution_time < now());
    throw_if(123,(now() + locked_for) < execution_time);
}
